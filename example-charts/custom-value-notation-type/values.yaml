# -- Image map
image:
  # -- Image registry
  registry: docker.io
  # -- Image repository
  repository: lucernae/django-sample
  # -- Image tag
  tag: "3.1"
  # -- Image pullPolicy
  pullPolicy: IfNotPresent


# -- This key name is used for service interconnection between subcharts and parent charts.
global:
  nameOverride: django
  # -- (tpl/string) Name of existing secret
  # @notationType -- tpl
  existingSecret: |
  # -- (string) Name of shared secret store that will be generated
  sharedSecretName: django-shared-secret
  # generic values
  # -- (string) The site name. It will be used to construct url such as http://django/
  siteName: django
  # -- (tpl/array) The django entrypoint command to execute
  # @notationType -- tpl
  djangoCommand: |
    ["/opt/django/scripts/docker-entrypoint.sh"]
  # -- (tpl/array) The django command args to be passed to entrypoint command
  # @notationType -- tpl
  djangoArgs: |
    ["uwsgi","--chdir=${REPO_ROOT}","--module=${MAIN_APP_NAME}.wsgi","--socket=:8000","--http=0.0.0.0:8080","--processes=5","--buffer-size=8192"]
  # -- (string) Default super user admin username
  adminUser: admin
  adminPassword:
    # -- (string) Specify this password value. If not, it will be autogenerated everytime chart upgraded
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: admin-password
  # -- (string/email) Default admin email sender
  # @notationType -- email
  adminEmail: admin@localhost
  djangoSecretKey:
    # -- (string) Specify this Django Secret string value. If not, it will be autogenerated everytime chart upgraded
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: django-secret
  # -- (string) Database username backend to connect to. If you use external backend, provide the value
  databaseUsername: django_db_user
  databasePassword:
    # -- (string) Specify this password value. If not, it will be autogenerated everytime chart upgraded. If you use external backend, you must provide the value
    value:
    valueFrom:
      secretKeyRef:
        name:
        key: database-password
  # -- (string) Django database name
  databaseName: django
  # -- (string) Django database host location. By default this chart can generate standard postgres chart. So you can leave it as default. If you use external backend,  you must provide the value
  databaseHost: postgis
  # -- (int) Django database port. By default this chart can generate standard postgres chart. So you can leave it as default. If you use external backend,  you must provide the value
  databasePort: 5432
  # -- (string) Python boolean literal, this will correspond to `DEBUG` environment variable inside the Django container. Useful as a debug switch.
  debug: "False"
  # -- (string) The main app name to execute. Affects which settings, wsgi, and rootURL to use.
  mainAppName: django
  # -- (string) Django settings module to be used
  djangoSettingsModule: django.settings
  # -- (string) Django root URL conf to be used
  rootURLConf: django.urls
  # -- (path) Location to the static directory
  staticRoot: /opt/django/static
  # -- (path) Location to the media directory
  mediaRoot: /opt/django/media

# -- (map) The deployment label
# @notationType -- yaml
labels:
  user/workload: "true"
  client-name: "my-boss"
  project-name: "awesome-project"

# -- (tpl/array) Define this for extra Django environment variables
# @notationType -- tpl
extraPodEnv: |
  - name: DJANGO_SETTINGS_MODULE
    value: "django.settings"
  - name: DEBUG
    value: {{ .Values.global.debug | quote }}
  - name: ROOT_URLCONF
    value: {{ .Values.global.rootURLConf | quote }}
  - name: MAIN_APP_NAME
    value: {{ .Values.global.mainAppName | quote }}

# -- (tpl/object) This will be evaluated as pod spec
# @notationType -- tpl
extraPodSpec: |
#  nodeSelector:
#    a.label: value

# -- (tpl/dict) Define this for extra secrets to be included in django-shared-secret secret
# @notationType -- tpl
extraSecret: |
#  key_1: value_1

# -- (tpl/dict) Define this for extra config map to be included in django-shared-config
# @notationType -- tpl
extraConfigMap: |
# file_1: conf content

# -- (tpl/array) Define this for extra volume mounts in the pod
# @notationType -- tpl
extraVolumeMounts: |
# You may potentially mount a config map/secret
#  - name: custom-config
#    mountPath: /docker-entrypoint.sh
#    subPath: docker-entrypoint.sh
#    readOnly: true

# -- (tpl/array) Define this for extra volume (in pair with extraVolumeMounts)
# @notationType -- tpl
extraVolume: |
# You may potentially mount a config map/secret
#  - name: custom-config
#    configMap:
#      name: geonode-config

service:
  # -- (string) Define k8s service for Django.
  type: ClusterIP
  # -- (string) Specify `None` for headless service. Otherwise, leave them be.
  clusterIP: ""
  # -- (tpl/array) Specify for LoadBalancer service type
  # @notationType -- tpl
  externalIPs: |
  # -- (int) Specify service port
  port: 80

  # -- (int) Specify node port, for NodePort service type
  nodePort:

  # -- (dict) Extra service annotations
  annotations: {}

ingress:
  # -- (bool) Set to true to generate Ingress resource
  enabled: false
  # -- (tpl/string) Set custom host name. (DNS name convention)
  # @notationType -- tpl
  host: |
  # -- (dict) Custom Ingress annotations
  annotations: {}
  # -- (dict) Custom Ingress labels
  labels: {}
  tls:
    # -- (bool) Set to true to enable HTTPS
    enabled: false
    # -- (string) You must provide a secret name where the TLS cert is stored
    secretName: django-tls

# -- (tpl/object) Probe can be overridden
# @notationType -- tpl
probe: |

postgis:
  # -- (bool) Enable postgis as database backend by default. Set to false if using different external backend.
  enabled: true

  # -- (tpl/string) Existing secret to be used
  # @notationType -- tpl
  existingSecret: |
    {{ include "common.sharedSecretName" . | quote -}}


persistence:
  staticDir:
    # -- (bool) Allow persistence
    enabled: true
    existingClaim: false
    mountPath: /opt/django/static
    subPath: "static"
    size: 8Gi
    # -- (k8s/storage/persistent-volume/access-modes) Static Dir access modes
    # @notationType -- yaml
    accessModes:
      - ReadWriteOnce
    annotations: {}
  mediaDir:
    # -- (bool) Allow persistence
    enabled: true
    existingClaim: false
    mountPath: /opt/django/media
    subPath: "media"
    size: 8Gi
    accessModes:
      - ReadWriteOnce
    annotations: {}


# -- (dict) Values with long description
# @raw
# Sometimes you need a very long description
# for your values.
#
# Any comment section for a given key with **@raw** attribute
# will be treated as raw string and stored as is.
# Since it generates in Markdown format, you can do something like this:
#
# ```yaml
# hello:
#   bar: true
# ```
#
# Markdown also accept subset of HTML tags. So you can also do this:
#
# <details>
# <summary>+Expand</summary>
# 
# ```bash
# execute some command
# ```
#
# </details>
sampleYaml: {}